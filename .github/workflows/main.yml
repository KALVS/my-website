name: AlexHolmSoftware

on:
  pull_request:
    branches:    
      - master

jobs:
  npm-install:
    runs-on: ubuntu-latest

    steps: 
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setups Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: npm
          cache-dependency-path: frontend/package-lock.json
      
      - name: Install Dependencies
        run: |
          cd frontend
          npm install

  Lint:
    runs-on: ubuntu-latest
    needs: npm-install

    steps: 
      - name: Checkout Code
        uses: actions/checkout@v3
      
      - name: Setups Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: npm
          cache-dependency-path: frontend/package-lock.json

      - name: Run Lint
        run: |
          cd frontend
          npm install
          npm run lint

  Build:
    runs-on: ubuntu-latest
    needs: lint

    steps: 
      - name: Checkout Code
        uses: actions/checkout@v3
      
      - name: Setups Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: npm
          cache-dependency-path: frontend/package-lock.json

      - name: Build Project
        run: |
          cd frontend
          npm install
          npm run build

  Deploy-S3:
    needs: build
    runs-on: ubuntu-latest
    environment: production 
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      
      - name: Setups Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: npm
          cache-dependency-path: frontend/package-lock.json

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{secrets.ROLE_TO_ASSUME}}
          aws-region: us-east-2

      - name: Deploy to S3
        run: |
          cd frontend
          npm install
          npm run build
          aws s3 sync ./dist s3://${{secrets.S3_BUCKET}} --delete

      - name: Invalidate CloudFront
        run: aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION }} --paths '/*'
      
  Deploy-Lambda:
    runs-on: ubuntu-latest
    environment: production
    permissions:
      id-token: write   # This is required for requesting the JWT
      contents: read    # This is required for actions/checkout
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      
      - name: Zip Stripe payment intent
        run: |
          cd projects/createPaymentIntent
          npm i
          zip -r ../stripe.zip *
          cd ..

      - name: Zip Secret Santa
        run: |
          cd projects/secretSanta
          zip -r ../secretSanta.zip *
          cd ..

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{secrets.ROLE_TO_ASSUME}}
          aws-region: ap-southeast-2

      - name: Upload Stripe payment intent
        run: |
          cd projects
          aws lambda update-function-code \
          --function-name createPaymentIntent \
          --zip-file fileb://stripe.zip

      - name: Upload Secret Santa
        run: |
          cd projects
          aws lambda update-function-code \
          --function-name secretSanta \
          --zip-file fileb://secretSanta.zip
      

